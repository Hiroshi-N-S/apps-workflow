---
# docs:
#   - https://argo-cd.readthedocs.io/en/stable/operator-manual/declarative-setup/
#   - https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/application.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: workflow-argo-workflows
  namespace: argo-cd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: workflow
  destination:
    name: ''
    namespace: workflow
    server: 'https://kubernetes.default.svc'
  syncPolicy:
    automated:
      prune: true
      selfHeal: false
    syncOptions:
      - CreateNamespace=true
  source:
    path: ''
    repoURL: 'https://argoproj.github.io/argo-helm'
    targetRevision: 0.39.9
    chart: argo-workflows
    helm:
      values: |
        workflow:
          serviceAccount:
            create: true
            name: "argo-workflows"
        controller:
          workflowNamespaces:
            - workflow
          persistence:
            archive: true
            mysql:
              host: workflow-argo-workflows-mysql-server
              port: 3306
              database: argo
              tableName: argo_workflows 
              userNameSecret:
                name: argo-mysql-secret
                key: MYSQL_USER
              passwordSecret:
                name: argo-mysql-secret
                key: MYSQL_PASSWORD
        server:
          enabled: true
          secure: true
          extraArgs:
            - --basehref
            - "/argo/"
          extraEnv:
            - name: BASE_HREF
              value: "/argo/"
          authModes:
            - server
            # - sso
          serviceType: ClusterIP
          servicePort: 2746
          servicePortName: https
          # https://argo-workflows.readthedocs.io/en/latest/argo-server/#ingress
          ingress:
            enabled: true
            annotations:
              kubernetes.io/ingress.class: nginx
              nginx.ingress.kubernetes.io/use-regex: "true"
              nginx.ingress.kubernetes.io/rewrite-target: /$2
              nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
              ingress.kubernetes.io/protocol: https # Traefik
              nginx.ingress.kubernetes.io/backend-protocol: https # ingress-nginx
            ingressClassName: nginx
            extraPaths:
              - path: /argo(/|$)(.*)
                pathType: ImplementationSpecific
                backend:
                  service:
                    name: workflow-argo-workflows-server
                    port:
                      name: https
          sso:
            enabled: false
            issuer: http://mysticstorage.local:8080/realms/devops
            clientId:
              name: argo-server-sso
              key: client-id
            clientSecret:
              name: argo-server-sso
              key: client-secret
            redirectUrl: https://mint.local/argo/oauth2/callback
            rbac:
              enabled: true
            scopes:
              - openid
              - profile
              - roles
            customGroupClaimName: roles
            userInfoPath: /protocol/openid-connect/userinfo
            insecureSkipVerify: true
            filterGroupsRegex:
              - "argo-workflows.*"
        extraObjects:
          - apiVersion: v1
            kind: ConfigMap
            metadata:
              name: proxy-env-mp
            data:
              TZ: Asia/Tokyo
              http_proxy: ""
              https_proxy: ""
              no_proxy: ""
          - apiVersion: v1
            kind: Secret
            metadata:
              name: argo-server-sso
            type: Opaque
            stringData:
              client-id: argo-workflows
              client-secret: JPxJ7YzBYAsl8uelN86Wv3gS72OY2p3x
          # --- --- --- --- --- --- --- --- ---
          # MySQL Server
          #
          - apiVersion: v1
            kind: Secret
            metadata:
              name: argo-mysql-secret
            type: Opaque
            stringData:
              MYSQL_DATABASE: argo
              MYSQL_USER: argo
              MYSQL_PASSWORD: Argo-Workflows
          - apiVersion: v1
            kind: ConfigMap
            metadata:
              name: mysql-cnf-mp
            data:
              mysql.cnf: ''
          - apiVersion: v1
            kind: Service
            metadata:
              name: workflow-argo-workflows-mysql-server
              labels:
                app.kubernetes.io/component: server
                app.kubernetes.io/instance: mysql-server
            spec:
              selector:
                app.kubernetes.io/component: server
                app.kubernetes.io/instance: mysql-server
              type: ClusterIP
              ports:
                - name: mysql
                  port: 3306
                  protocol: TCP
                  targetPort: mysql
                  nodePort: null
          - apiVersion: apps/v1
            kind: StatefulSet
            metadata:
              name: workflow-argo-workflows-mysql-server
              labels:
                app.kubernetes.io/component: server
                app.kubernetes.io/instance: mysql-server
            spec:
              serviceName: mysql-server
              replicas: 1
              updateStrategy:
                type: RollingUpdate
              selector:
                matchLabels:
                  app.kubernetes.io/component: server
                  app.kubernetes.io/instance: mysql-server
              template:
                metadata:
                  labels:
                    app.kubernetes.io/component: server
                    app.kubernetes.io/instance: mysql-server
                spec:
                  containers:
                    - name: mysql
                      image: amd64/mysql:8.0.35-bullseye
                      args:
                        - --character-set-server=utf8mb4
                        - --collation-server=utf8mb4_unicode_ci
                      env:
                        - name: MYSQL_ROOT_PASSWORD
                          value: MySQL12345
                      envFrom:
                        - secretRef:
                            name: argo-mysql-secret
                      ports:
                        - name: mysql
                          containerPort: 3306
                      volumeMounts:
                        - name: mysql-cnf-vol
                          mountPath: /etc/mysql/conf.d/mysql.cnf
                          subPath: mysql.cnf
                        - name: data
                          mountPath: /var/lib/mysql
                  volumes:
                    - name: mysql-cnf-vol
                      configMap:
                        name: mysql-cnf-mp
                        items:
                          - key: mysql.cnf
                            path: mysql.cnf
              volumeClaimTemplates:
                - metadata:
                    name: data
                  spec:
                    resources:
                      requests:
                        storage: 4Gi
                    accessModes:
                      - ReadWriteOnce
                    persistentVolumeReclaimPolicy: Recycle
